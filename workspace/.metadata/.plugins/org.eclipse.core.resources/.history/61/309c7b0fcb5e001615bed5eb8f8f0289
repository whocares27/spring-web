<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="rewards.web"/>

	<mvc:annotation-driven />

	<mvc:view-controller path="/" view-name="index" />
	<mvc:resources mapping="/images/**" location="/images/" cache-period="3600" />
	<mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/" />
	<mvc:default-servlet-handler />

	<bean id="messageSource"
		class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="/WEB-INF/messages/global" />
	</bean>

	<!-- TODO 02a: Configure a bean that loads definitions for Tiles -->
	
	<bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
	<property name="definitions">
	<list>
	<value>/WEB-INF/views/tiles.xml</value>
	</list>
	</property>
	</bean>
		

	<!-- TODO 02b: Configure a view resolver for Tiles -->

	<!-- TODO 02c: Run the web-app and see if Tiles views are used -->

	<!-- TODO 02d: Remove InternalResourceViewResolver or re-arrange its order -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"/>
		<property name="suffix" value=".jsp"/>
	</bean>

	<!--
		Both TilesViewResolver and InternalResourceViewResolver use a default order
		of Integer.MAX_VALUE (meaning ordered as last). Because of this, it is unpredictable
		which one will resolve first. JSP? Or Tiles?
		
		To configure properly, either remove the InternalResourceViewResolver. Or,
		order them properly setting its "order" property, and have the TilesViewResolver
		go first. Another way to order view resolvers is to use <mvc:view-resolvers>.
	-->

</beans>
